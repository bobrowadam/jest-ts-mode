#+TITLE: Jest TypeScript Mode for Emacs

* Jest TypeScript Mode

An Emacs mode for running Jest tests in TypeScript projects.

** Features

- Run tests at point
- Rerun latest test
- Jump to latest test
- Choose tests with completion
- Support for describe-only mode

** Installation

*** Manual Installation

Clone this repository:

#+begin_src bash
git clone https://github.com/bobrowadam/jest-ts-mode.git
#+end_src

Add to your Emacs configuration:

#+begin_src elisp
(add-to-list 'load-path "/path/to/jest-ts-mode")
(require 'jest-ts-mode)
#+end_src

*** With use-package

#+begin_src elisp
(use-package jest-ts-mode
  :load-path "/path/to/jest-ts-mode")
#+end_src

** Usage

| Command                              | Description                                |
|--------------------------------------+--------------------------------------------|
| ~jest-ts-mode/run-test-at-point~     | Run the test at the current cursor position |
| ~jest-ts-mode/rerun-latest-test~     | Rerun the most recently executed test      |
| ~jest-ts-mode/jump-to-latest-test~   | Jump to the most recently executed test    |
| ~jest-ts-mode/choose--test-with-completion~ | Choose a test to run using completion |

** Configuration

You can customize the mode by setting these variables:

#+begin_src elisp
;; Path to the Jest executable - can be a function that returns the path
(setq jest-ts/jest-command-fn
      (lambda ()
        (concat (locate-dominating-file "" "node_modules") "node_modules/.bin/jest")))

;; Environment variables for Jest tests
;; These will be set in the compilation process environment
(setq jest-ts/environment-variables '(("NODE_ENV" . "test")
                                      ("IN_MEMORY_DB" . "true")))

;; Port for Node.js inspector
(setq jest-ts/inspect-port 9229)
#+end_src

All of these variables can also be customized using Emacs' customize interface:

#+begin_src elisp
M-x customize-group RET jest-ts RET
#+end_src
